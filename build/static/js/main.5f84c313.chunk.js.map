{"version":3,"sources":["components/Pokecard.js","components/Pokedex.js","components/Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","idPokemon","id","name","type","base_experience","num","size","toString","length","pad","imgSrc","className","src","alt","Pokedex","pokemons","exp","isWinner","title","map","Pokegame","hand1","hand2","index","Math","floor","random","randPokemon","splice","exp1","reduce","pokemon","exp2","console","log","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f84c313.chunk.js","sourcesContent":["//Single pokemos with name, image and type\r\nimport './Pokecard.css'\r\n\r\n\r\nconst pad = (num, size) => {\r\n    num = num.toString();\r\n    while (num.length < size) num = \"0\" + num;\r\n    return num;\r\n}\r\n\r\nconst POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\r\n\r\nexport const Pokecard = ({ id: idPokemon, name, type, base_experience }) => {\r\n    const id = pad(idPokemon, 3);\r\n    const imgSrc = `${POKE_API}${id}.png`;\r\n    return (\r\n        <div className='Pokecard'>\r\n            <h1 className='Pokecard-title'>{name}</h1>\r\n            <div className='Pokecard-img' >\r\n                <img src={imgSrc} alt={name} />\r\n            </div>\r\n            <div className=\"Pokecard-data\">Type: {type}</div>\r\n            <div className=\"Pokecard-data\">Exp: {base_experience}</div>\r\n        </div>\r\n    )\r\n}","import { Pokecard } from './Pokecard'\r\nimport './Pokedex.css'\r\n\r\n\r\nconst Pokedex = ({ pokemons, exp, isWinner }) => {\r\n    let title = <h1 className={isWinner ? 'Pokedex-winner' : 'Pokedex-loser'}>{isWinner ? 'Winning hand' : 'Losing Hand'}</h1>\r\n    return (\r\n        <div className='Pokedex'>\r\n            {title}\r\n            <h4>Total experience: {exp}</h4>\r\n            <div className='Pokedex-list'>\r\n                {pokemons.map(({ id, name, type, base_experience }) => {\r\n                    return <Pokecard key={id} name={name} type={type} base_experience={base_experience} id={id} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokedex;","import Pokedex from \"./Pokedex\";\r\n\r\nexport const Pokegame = ({ pokemons }) => {\r\n    let hand1 = [];\r\n    let hand2 = [...pokemons];\r\n    while (hand1.length < hand2.length) {\r\n        const index = Math.floor(Math.random() * hand2.length);\r\n        const randPokemon = hand2.splice(index, 1 || 0);\r\n        hand1 = [...hand1, ...randPokemon];\r\n    }\r\n    let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n    let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n    console.log(exp1);\r\n    return (\r\n        <div>\r\n            <Pokedex pokemons={hand1} exp={exp1} isWinner={exp1 > exp2} />\r\n            <Pokedex pokemons={hand2} exp={exp2} isWinner={exp2 > exp1} />\r\n        </div>\r\n    )\r\n}\r\n\r\nPokegame.defaultProps = {\r\n    pokemons: [\r\n        { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\r\n        { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\r\n        { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\r\n        { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\r\n        { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\r\n        { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\r\n        { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\r\n        { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 }\r\n    ]\r\n}","import { Pokegame } from './components/Pokegame';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Pokegame />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}